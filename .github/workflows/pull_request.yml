name: Pull Request

on:
  pull_request:
    branches:
      - main

jobs:
  strategy:
    max-parallel: 1
  
  lint:
    name: PyLint
    runs-on: ubuntu-latest
    steps:
    - name: Check out
      uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: "3.9"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint
    - name: Analysing the code with pylint
      run: |
        pylint $(find . -name "*.py" | xargs)

  scan:
    name: Security Scan
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Perform Scan
        uses: ShiftLeftSecurity/scan-action@master
        with:
          type: "python,java"
        # env:
        #   WORKSPACE: https://github.com/${{ REPO }}/blob/${{ github.sha }}
        #   GITHUB_TOKEN: ${{ secrets.TOKEN }}
        #   SCAN_AUTO_BUILD: true
      - uses: actions/upload-artifact@v1
        with:
          name: reports
          path: reports

  test:
    name: PyTest
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout 
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ./server/requirements.txt
          pip install ./server
      - name: Test Server
        run: |
          export GOOGLE_CLOUD_PROJECT=${{secrets.GOOGLE_PROJECT_ID}}
          export BIGQUERY_DATASET=module_registry
          printf '%s\n' '${{secrets.GOOGLE_APP_ENGINE_KEY}}' > google_creds.json
          export GOOGLE_APPLICATION_CREDENTIALS=google_creds.json
          pytest server
      - name: Test Scorer
        run: |
          pytest scorer
      - name: Test Frontend
        run: |
          pytest frontend

  deployment:
    name: Deployment
    runs-on: ubuntu-latest
    environment: production
    concurrency: production
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Deply to google engine
        uses: google-github-actions/deploy-appengine@v0.4.0
        with:
          project_id: ${{secrets.GOOGLE_PROJECT_ID}}
          version: dev
          credentials: ${{secrets.GOOGLE_APP_ENGINE_KEY}}
          flags: --no-cache
          deliverables: server/app.yaml
